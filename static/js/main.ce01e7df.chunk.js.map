{"version":3,"sources":["sharedComponents/Profile.jsx","sharedComponents/SideBar.jsx","styles/appBar.jsx","AboutMe/index.js","AboutMe/AboutMe.jsx","dummyText.js","Portfolio/index.js","Portfolio/Portfolio.jsx","Contact/index.js","Contact/Contact.jsx","serviceWorker.js","index.js","App.js"],"names":["Profile","Avatar","style","padding","margin","SideBar","toggleDrawer","setCurrentPage","role","onClick","onKeyDown","List","text","icon","map","index","ListItem","button","key","ListItemIcon","ListItemText","primary","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","AboutMe","Container","src","alt","Typography","variant","Portfolio","Contact","Boolean","window","location","hostname","match","ReactDOM","render","useEffect","document","pages","classes","useState","sideOpen","setSideOpen","currentPage","open","event","type","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Drawer","onClose","page","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uWAWeA,EATC,WACd,OACE,kBAAC,WAAD,KACA,kBAACC,EAAA,EAAD,CAAQC,MAAO,CAACC,QAAQ,OAAQC,OAAQ,SAAxC,QC6BWC,EAxBC,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,eAAhB,OACZ,yBACAC,KAAK,eACLC,QAASH,GAAa,GACtBI,UAAWJ,GAAa,IACxB,kBAACK,EAAA,EAAD,KACE,kBAAC,EAAD,MACG,CACC,CAACC,KAAK,WAAYC,KAAM,kBAAC,IAAD,OACxB,CAACD,KAAK,YAAaC,KAAM,kBAAC,IAAD,OACzB,CAACD,KAAM,UAAUC,KAAM,kBAAC,IAAD,QACvBC,KAAI,WAAcC,GAAd,IAAEH,EAAF,EAAEA,KAAKC,EAAP,EAAOA,KAAP,OACJ,kBAACG,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAKN,EAAMH,QAAS,kBAAMF,EAAeK,KACxD,kBAACO,EAAA,EAAD,KACGN,GAEL,kBAACO,EAAA,EAAD,CAAcC,QAAST,W,QCZlBU,EAZGC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,O,QCTCK,ECGC,WAEf,OACG,kBAACC,EAAA,EAAD,KACD,yBAAKC,IAA6B,uBAAwBC,IAAI,kBAC3D,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,YACA,kBAACD,EAAA,EAAD,SCVS,4jCDUT,OETSE,ECCG,WAChB,OAAO,mCCDMC,ECAC,WACf,OAAO,yCCSYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,mBCQD,WACbC,qBAAU,kBAAMC,SAASjB,MAAQ,kBAAgB,IACjD,IAAMkB,EAAQ,CAAC,WAAY,kBAAC,EAAD,MAAY,UAAa,kBAAC,EAAD,MAAa,QAAW,kBAAC,EAAD,OACtEC,EAAU3B,IAHqB,EAIN4B,qBAJM,mBAI9BC,EAJ8B,KAIrBC,EAJqB,OAKCF,qBALD,mBAK9BG,EAL8B,KAKjB9C,EALiB,KAU/BD,EAAe,SAACgD,GAAD,OAAU,SAAAC,IACV,YAAfA,EAAMC,MAAqC,QAAdD,EAAMrC,KAA+B,UAAdqC,EAAMrC,MAG9DkC,EAAYE,KAGd,OACE,yBAAKG,UAAWR,EAAQxB,MACtB,kBAACiC,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEJ,UAAWR,EAAQtB,WACnBlB,QAASH,GAAa,GACtBwD,KAAK,QACLC,MAAM,UACNC,aAAW,QAEX,kBAAC,IAAD,OAGF,kBAACC,EAAA,EAAD,CAAQX,KAAMH,EAAUe,QAAS5D,GAAa,IAC5C,kBAAC,EAAD,CAASA,aAAcA,EAAcC,eA1BtB,SAAC4D,GAExB,OADApB,SAASjB,MAAM,kBAAoBqC,EAC5B5D,EAAe4D,OA2BhB,kBAAChC,EAAA,EAAD,CAAYC,QAAQ,KAAKqB,UAAWR,EAAQnB,OACvCuB,GAGL,kBAACpD,EAAA,EAAD,aAIH+C,EAAMK,MDnDG,MAASN,SAASqB,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ce01e7df.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nconst Profile = () => {\n  return (\n    <Fragment>\n    <Avatar style={{padding:\"10px\", margin: \"10px\"}}>\n      SH\n    </Avatar>\n    </Fragment>)\n}\n\nexport default Profile\n","import React from 'react';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport BuildIcon from \"@material-ui/icons/Build\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport Profile from \"./Profile\";\n\nconst SideBar = ({toggleDrawer, setCurrentPage}) => (\n    <div\n    role=\"presentation\"\n    onClick={toggleDrawer(false)}\n    onKeyDown={toggleDrawer(false)} >\n    <List>\n      <Profile />\n        {[\n          {text:'About Me', icon: <PersonIcon/>},\n          {text:'Portfolio', icon: <BuildIcon/>},\n          {text: 'Contact',icon: <EmailIcon />}\n        ].map(({text,icon}, index) => (\n          <ListItem button key={text} onClick={() => setCurrentPage(text)}>\n            <ListItemIcon>\n              {icon}\n            </ListItemIcon>\n          <ListItemText primary={text} />\n          </ListItem>\n        ))\n        }\n      </List>\n    </div>\n  )\n\nexport default SideBar;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default useStyles\n","import AboutMe from \"./AboutMe.jsx\";\nexport default AboutMe;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CatIpsom from \"../dummyText.js\";\nconst AboutMe = () => {\n\n return ( \n    <Container>\n   <img src={process.env.PUBLIC_URL+ \"/profile_picture.png\"} alt=\"Scott Harwood\"/>\n      <Typography variant=\"h1\">About Me</Typography>\n      <Typography> {CatIpsom()} </Typography>\n    </Container>\n )\n}\n\nexport default AboutMe\n","export default () => (\n`Kitty kitty im so hungry im so hungry but ew not for that scratch me there, \\\n \\\n  elevator butt Have secret plans sleep nap for scratch at door to be let outside, \\\n  get let out then scratch at door immmediately after to be let back in. \\\n  Find something else more interesting. 𝕄𝔼𝕆𝕎 chew foot, yet claw at curtains \\\n  stretch and yawn nibble on tuna ignore human bite human hand and hiding behind the couch until lured out by \\\n  a feathery toy. Lick human with sandpaper tongue its 3am, time to create some chaos for bite off humans \\\n  toes so eat half my food and ask for more or experiences short bursts of poo-phoria after going to the loo being \\\n  gorgeous with belly side up. Love you, then bite you throwup on your pillow, and mesmerizing birds. Hey!\\\n  you there, with the hands gimme attention gimme attention gimme attention gimme attention gimme attention \\\n  gimme attention just kidding i dont want it anymore meow bye for dismember a mouse and then regurgitate \\\n  parts of it on the family room floor rub butt on table meow to be let in. \\\n`)\n","import Portfolio from \"./Portfolio.jsx\";\nexport default Portfolio;\n","import React from \"react\";\n\nconst Portfolio = () => {\n  return <div>A</div>\n}\n\nexport default Portfolio;\n","import Contact from \"./Contact.jsx\"\n\nexport default Contact\n","import React from \"react\";\n\nconst Contact = () => {\n return <div>Contact</div>\n}\n\nexport default Contact\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState, useEffect} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from \"@material-ui/core/Drawer\";\nimport SideBar from \"./sharedComponents/SideBar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport useStyles from \"./styles/appBar\";\nimport AboutMe from \"./AboutMe\";\nimport Portfolio from \"./Portfolio\";\nimport Contact from \"./Contact\"\n\nexport default function ButtonAppBar() {\n  useEffect(() => document.title = \"Scott Harwood\",[])\n  const pages = {\"About Me\": <AboutMe />,\"Portfolio\": <Portfolio/>,\"Contact\": <Contact />}\n  const classes = useStyles()\n  const [sideOpen,setSideOpen] = useState();\n  const [currentPage, setCurrentPage] = useState();\n  const onSetCurrentPage = (page) => {\n    document.title=\"Scott Harwood: \" + page;\n    return setCurrentPage(page);\n  }\n  const toggleDrawer = (open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setSideOpen(open);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton \n            className={classes.menuButton}\n            onClick={toggleDrawer(true)} \n            edge=\"start\" \n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          \n          <Drawer open={sideOpen} onClose={toggleDrawer(false)}>\n            <SideBar toggleDrawer={toggleDrawer} setCurrentPage={onSetCurrentPage}/>      \n          </Drawer>\n        \n          <Typography variant=\"h6\" className={classes.title}>\n              {currentPage}\n          </Typography>\n          \n          <Avatar>SH</Avatar>\n        </Toolbar>\n      </AppBar>\n      \n      {pages[currentPage]}\n\n    </div>\n  );\n}\n\n"],"sourceRoot":""}